{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","userId","user","usersFromServer","find","u","Date","now","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","initialTodo","TodoForm","users","onAdd","maxId","useState","inputError","setInputError","optionError","setOptionError","setTodo","handleError","currentTodo","isTitleValid","trim","isUserIdValid","onSubmit","event","preventDefault","type","placeholder","value","onChange","e","newTodo","handleInputChange","target","onBlur","handleSelectChange","disabled","App","todosFromServer","setTodos","reduce","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ba79953.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nimport usersFromServer from '../../api/users';\n\nimport { User } from '../../react-app-env';\n\ninterface Props {\n  userId: number;\n}\n\nexport const UserInfo: React.FC<Props> = ({\n  userId,\n}) => {\n  let user: User | undefined = usersFromServer.find(u => u.id === +userId);\n\n  if (!user) {\n    user = {\n      id: Date.now(),\n      name: 'No name',\n      username: 'No name',\n      email: '#',\n    };\n  }\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\n\nimport { Todo } from '../../react-app-env';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n}) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <UserInfo userId={todo.userId} />\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return (\n          <TodoInfo todo={todo} key={todo.id} />\n        );\n      })}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './TodoForm.scss';\n\nimport { User, Todo } from '../../react-app-env';\n\ninterface Props {\n  users: User[],\n  onAdd: (todo: Todo) => void,\n  maxId: number,\n}\n\nconst initialTodo: Todo = {\n  id: 0,\n  title: '',\n  completed: false,\n  userId: 0,\n};\n\nexport const TodoForm: React.FC<Props> = ({\n  users,\n  onAdd,\n  maxId,\n}) => {\n  const [inputError, setInputError] = useState(false);\n  const [optionError, setOptionError] = useState(false);\n  const [todo, setTodo] = useState(initialTodo);\n\n  const handleError = (currentTodo: Todo) => {\n    const isTitleValid = currentTodo.title.trim() !== '';\n    const isUserIdValid = currentTodo.userId !== 0;\n\n    setInputError(!isTitleValid);\n    setOptionError(!isUserIdValid);\n  };\n\n  const handleReset = () => {\n    setTodo(initialTodo);\n    setInputError(false);\n    setOptionError(false);\n  };\n\n  const handleInputChange = (value: string) => {\n    const newTodo = { ...todo, title: value };\n\n    setTodo(newTodo);\n    setInputError(false);\n  };\n\n  const handleSelectChange = (value: number) => {\n    const newTodo = { ...todo, userId: value };\n\n    setTodo(newTodo);\n    setOptionError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!todo.title.trim() || !todo.userId) {\n      return;\n    }\n\n    onAdd({ ...todo, id: maxId + 1 });\n\n    handleReset();\n  };\n\n  return (\n    <form\n      key={maxId}\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          className=\"input\"\n          placeholder=\"Type a title of todo\"\n          value={todo.title}\n          onChange={e => handleInputChange(e.target.value)}\n          onBlur={() => handleError(todo)}\n        />\n        {inputError && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={todo.userId}\n          onChange={e => handleSelectChange(+e.target.value)}\n          onBlur={() => handleError(todo)}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {users.map((user) => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {optionError && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { useState } from 'react';\n\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\n\nimport { Todo } from './react-app-env';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const maxId = todos.reduce((max, todo) => {\n    return todo.id > max ? todo.id : max;\n  }, 0);\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos([...todos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        users={usersFromServer}\n        onAdd={addTodo}\n        maxId={maxId}\n      />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}